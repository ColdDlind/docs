(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{369:function(t,a,e){"use strict";e.r(a);var s=e(43),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"mrapi-dal-配置项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mrapi-dal-配置项"}},[t._v("#")]),t._v(" @mrapi/dal 配置项")]),t._v(" "),e("p",[t._v("\b 当前配置仅提供给 "),e("code",[t._v("@mrapi/dal")]),t._v(" 使用。")]),t._v(" "),e("p",[e("strong",[t._v("注意: 请先查看 "),e("a",{attrs:{href:"https://mrapi-js.github.io/docs/zh/Configuration/Common.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mrapi 整体配置项说明"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"参数说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[t._v("#")]),t._v(" 参数说明")]),t._v(" "),e("div",{staticClass:"language-ts line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @mrapi/dal config")]),t._v("\n  dal"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In the event of a multi-tenant exception, whether or not an error is thrown.")]),t._v("\n    pmtErrorThrow"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Remove routes of the same name before adding them.")]),t._v("\n    enableRepeatRoute"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h3",{attrs:{id:"pmterrorthrow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pmterrorthrow"}},[t._v("#")]),t._v(" pmtErrorThrow")]),t._v(" "),e("p",[t._v("当多租户读取发生异常的时候，是否抛出异常")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("参数类型："),e("code",[t._v("boolean")])])]),t._v(" "),e("li",[e("p",[t._v("默认值："),e("code",[t._v("false")])])])]),t._v(" "),e("p",[e("strong",[t._v("注意: 默认 false 是为了确保在请求协议中未设置 tenantIdentity 时候也能够正常访问 GraphQL 文档")])]),t._v(" "),e("h3",{attrs:{id:"enablerepeatroute"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enablerepeatroute"}},[t._v("#")]),t._v(" enableRepeatRoute")]),t._v(" "),e("p",[t._v("是否允许添加重复标识的服务器路由")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("参数类型："),e("code",[t._v("boolean")])])]),t._v(" "),e("li",[e("p",[t._v("默认值："),e("code",[t._v("true")])])])]),t._v(" "),e("p",[e("strong",[t._v("注意: 允许重复添加时，在添加前会执行删除路由的逻辑")])])])}),[],!1,null,null,null);a.default=r.exports}}]);